apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: quarkus-jvm
  name: quarkus-jvm
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: quarkus-jvm
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: quarkus-jvm
    spec:
      containers:
      - image: sportsevents-quarkus-jvm:1.0.0-SNAPSHOT
        imagePullPolicy: IfNotPresent
        name: quarkus-jvm
        readinessProbe:
          tcpSocket:
            port: 8082
          initialDelaySeconds: 1
          periodSeconds: 1
        env:
          - name: DB_USER
            valueFrom: 
              secretKeyRef:
                name: db-secret
                key: db-username
          - name: DB_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: db-secret
                key: db-password
          - name: DB_NAME
            valueFrom: 
              secretKeyRef:
                name: db-secret
                key: db-name
          - name: DB_HOST
            valueFrom: 
              configMapKeyRef:
                name: app-configmap
                key: qk-db-host
          - name: DB_PORT
            valueFrom: 
              configMapKeyRef:
                name: app-configmap
                key: qk-db-port
          - name: KC_HOST
            valueFrom: 
              configMapKeyRef:
                name: app-configmap
                key: kc-host
          - name: KC_PORT
            valueFrom: 
              configMapKeyRef:
                name: app-configmap
                key: kc-port
        ports:
          - containerPort: 8082
        resources:
          limits:
            memory: 500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30